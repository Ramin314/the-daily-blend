version: '3'

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: daily_blend_web
    command: sh -c "python manage.py runserver 0.0.0.0:8000"
    ports:
      - "8000:8000"
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
      qdrant:
        condition: service_started
    volumes:
      - .:/app

  db:
    image: mysql:8
    container_name: daily_blend_db
    env_file: .env
    command: ["mysqld", "--character-set-server=utf8mb4", "--collation-server=utf8mb4_unicode_ci"]
    ports:
      - "3306:3306"
    volumes:
      - ./mysql-data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 5s
      interval: 5s
      retries: 6

  qdrant:
    image: qdrant/qdrant
    container_name: daily_blend_qdrant
    ports:
      - "6333:6333"
    volumes:
      - ./qdrant-storage:/qdrant/storage

  redis:
    image: redis:latest
    container_name: daily_blend_redis

  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: project_celery_worker
    depends_on:
      - db
      - redis
    env_file: .env
    command: celery -A project worker --loglevel=info

  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: project_celery_beat
    depends_on:
      - db
      - redis
    command: celery -A project beat --loglevel=info
    env_file: .env
